clear;
clc;
close all;

a=dir('*mA');

for i=1:length(a)
% how to get voltage and amperage from file names?
% - options include strsplit, regex, etc.
% ultimately, we need to use the format of each file name
% 'material'_'volts'V_'amps'mA
b = strsplit(a(i).name,'_'); % gives a cell array (b) that is 1x3
% {'material','voltsV','ampsmA'} -- now split by 'V' and 'mA'
v = strsplit(b{2},'V'); % volts are always in the second portion
ampval= strsplit(b{3},'mA'); % amps are always in the third portion
volts(i) = str2num(v{1}); % convert string to number (vector)
amps(i) = str2num(ampval{1});
if i <= 2
    data.aluminum.(strcat('v', v{1})) = readmatrix(a(i).name);
elseif i == 3 || i == 4
    data.brass.(strcat('v', v{1})) = readmatrix(a(i).name);
else
    data.steel.(strcat('v', v{1})) = readmatrix(a(i).name);
end
end

% properties(1) = density; properties(2) = cp; properties(3) = k

data.aluminum.properties(1) = 2810;
data.aluminum.properties(2) = 960;
data.aluminum.properties(3) = 130;

data.brass.properties(1) = 8500;
data.brass.properties(2) = 380;
data.brass.properties(3) = 115;

data.steel.properties(1) = 8000;
data.steel.properties(2) = 500;
data.steel.properties(3) = 16.2;

%% Part 2 (t = 0)


xPos(1) = 7.62*10^-2;
for i=1:7
        xPos(i+1) = .0127*(i-1)+.01375;
end

namebrac = ["aluminum","brass","steel"];
voltbrac = ["v25","v30"];
M = [];    
% plotting experimental and fit data for brass and aluminium
count = 1;
for i=1:2


    for j=1:2

desiredData(1:8) = data.(namebrac(i)).(voltbrac(j))(1,2:end);
y = desiredData;
P = polyfit(xPos,desiredData,1);
M(count) = P(1); % getting slope
count = count + 1;
polyY = polyval(P,xPos);
figure()
scatter(xPos,y,'r')
hold on
scatter(xPos,polyY,'b')
hold off
titleStr = sprintf('%s - %s', namebrac{i}, voltbrac{j});
title(titleStr,'Experimental vs. Best-Fit');
xlabel('Position (m)');
ylabel('Temperature (C)');
legend('Experimental','Best-Fit','Location','northwest');

    end
end

%Plotting experimental and fit data for steel
y = [data.steel.v22(1,2:end)];
P = polyfit(xPos,y,1);
polY = polyval(P,xPos);
figure()
scatter(xPos,y,'r');
hold on
scatter(xPos,polyY,'b');
hold off
title('Experimental Steel vs. Best fit steel');
xlabel('Position (m)');
ylabel('Temperature (C)');
legend('Experimental','Best-Fit','Location','northwest');
M(5) = P(1); % getting slope for steel

%% Putting slopes into a table
Cases = {'Aluminium_v25';'Aluminium_v30';'Brass_v25';'Brass_v30';'Steel_v22'};
Linear_Fit_Slope = M';
Slope_Fit_Data = table(Linear_Fit_Slope, 'RowNames', cellstr(Cases));



    
